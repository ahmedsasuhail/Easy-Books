// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.209.6/containers/javascript-node-postgres
// Update the VARIANT arg in docker-compose.yml to pick a Node.js version
{
  "name": "Easy-Books",
  "dockerComposeFile": "docker-compose.yml",
  "service": "app",
  "workspaceFolder": "/workspace",

  // Set *default* container specific settings.json values on container create.
  "settings": {
    "sqltools.connections": [
      {
        "name": "Easy-Books Database",
        "driver": "PostgreSQL",
        "previewLimit": 50,
        "server": "localhost",
        "port": 5432,
        "database": "easybooks",
        "username": "postgres",
        "password": "postgres"
      }
    ],
    "terminal.integrated.profiles.linux": {
      "bash": {
        "path": "bash",
        "icon": "terminal-bash",
        "color": "terminal.ansiGreen"
      },
      "zsh": {
        "path": "zsh",
        "icon": "terminal-debian",
        "color": "terminal.ansiRed"
      }
    },
    "terminal.integrated.defaultProfile.linux": "zsh",
    "#terminal.integrated.automationShell.linux": "bash"
  },

  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
    "dbaeumer.vscode-eslint",
    "mtxr.sqltools",
    "mtxr.sqltools-driver-pg",
    "matklad.rust-analyzer",
    "ms-azuretools.vscode-docker",
    "rangav.vscode-thunder-client",
    "webfreak.debug",
    "mikestead.dotenv",
    "gruntfuggly.todo-tree",
    "trunk.io"
  ],

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [3000, 5432, 8080, 7700],

  // Use 'postCreateCommand' to run commands after the container is created.
  "postCreateCommand": "cargo install diesel_cli --no-default-features --features postgres",

  // Uncomment when using a ptrace-based debugger like C++, Go, and Rust
  "runArgs": ["--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined"],

  // Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "node",
  "features": {
    "git": "os-provided",
    "rust": "1.58.0"
  }
}
