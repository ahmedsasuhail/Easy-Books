// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.205.2/containers/debian
{
  "name": "Easy-Books",
  "build": {
    "dockerfile": "Dockerfile",
    // Update 'VARIANT' to pick an Debian version: bullseye, buster, stretch
    // Use bullseye or stretch on local arm64/Apple Silicon.
    "args": { "VARIANT": "bullseye" }
  },

  // Set *default* container specific settings.json values on container create.
  "settings": {
    "terminal.integrated.profiles.linux": {
      "bash": {
        "path": "bash",
        "icon": "terminal-bash",
        "color": "terminal.ansiGreen"
      },
      "zsh": {
        "path": "zsh",
        "icon": "terminal-debian",
        "color": "terminal.ansiRed"
      },
      "meilisearch": {
        "path": "meilisearch",
        "icon": "server-process",
        "color": "terminal.ansiMagenta"
      }
    },
    "terminal.integrated.defaultProfile.linux": "zsh",
    "#terminal.integrated.automationShell.linux": "bash"
  },

  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
    "matklad.rust-analyzer",
    "dbaeumer.vscode-eslint",
    "ms-azuretools.vscode-docker",
    "rangav.vscode-thunder-client",
    "webfreak.debug"
  ],

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [
    3000, // React development server.
    8080, // Go API server.
    7700 // Meilisearch server.
  ],

  // Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
  "mounts": [
    "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
  ],

  // Uncomment when using a ptrace-based debugger like C++, Go, and Rust
  "runArgs": ["--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined"],

  // Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "vscode",
  "features": {
    "docker-in-docker": "latest",
    "docker-from-docker": "latest",
    "git": "os-provided",
    "node": "16",
    "rust": "1.58.0"
  }
}
